@using BlazorActorApp.Logging;
@using BlazorActorApp.Components;

@inject DebugService DebugService;
@inherits LayoutComponentBase
@implements IDisposable

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        NetCoreLabs
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body        
        
        @if (DebugService.LogMessages.Count > 0)
        {
            <h3>Server Console</h3>
            <hr/>
            
            <div class="console">
                @foreach (string s in DebugService.LogMessages)
                {
                    <div>@s</div>
                }
            </div>
        }

        @if (DebugService.ConnectToServerConsole) {
            <ServerConsole />
        }

    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public async Task OnChange()
    {
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }

    protected override void OnInitialized()
    {
        DebugService.OnChange += OnChange;
    }

    public void Dispose()
    {
        DebugService.OnChange -= OnChange;
    }
}

